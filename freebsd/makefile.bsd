# FreeBSD/NetBSD/OpenBSD Intel/Alpha/... legacy makefile

# Update: I now found out how to do this with FreeBSD's own make. It was in 
# /usr/share/doc/psd/12.make/paper.ascii.gz, chapter "Pmake for Gods" :-)

# So this file now works with both BSD make and GNU make

DEBUG=-s
# set to -g for debugging

OBJ    =.o
RM     =rm
DIRSEP =/
ifdef PERL
CFLAGS =-DDO_PERL -I../h -I../.. -c -O3 $(DEBUG) `perl -MExtUtils::Embed -e ccopts`
PERLLIBS=`perl -MExtUtils::Embed -e ldopts`
PERLOBJ=perl$(OBJ)
else
CFLAGS =-I../h -I../.. -c -O3 $(DEBUG)
endif
LFLAGS =$(DEBUG)
CDEFS  =-DUNIX
CC     =gcc
EXENAMEFLAG=-o 
SRC_DIR=../src/
LIBS   =../../fidoconf/libfidoconfigbsd.a ../../smapi/libsmapibsd.a

# this is the rule for BSD's own make
.PATH.c :  $(SRC_DIR)
.c.o:
	$(CC) $(CFLAGS) $(CDEFS) $<

# the rule for gmake is in makefile.inc.

# luckily, the two rules doo not interfere with each other - BSD make
# ignores the second one, gmake ignores the first one.

include ../makefile.inc



