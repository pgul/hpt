.\" .% $Id$
.TH "fidoroute" "5" "1.0" "Stas Degteff <stas_degteff@users.sourceforge.net>" "configuration file"
.SH "NAME"
.LP 
\fBfidoroute.conf\fR \- Configuration file for fidoroute
.SH "DESCRIPTION"
.LP 
Fidoroute uses a configuration file named
\fBfidoroute.conf\fR. This configuration file will be looked for in the current directory unless specified at the command line.
.LP 
Configuration file contains statements in form:
.br 
token value
.br 
Empty lines are ignored.
.br 
Lines beginning with '#' or ';' chars are also ignored (they are comment lines).
.SH "PARAMETERS"
.LP 
\fBAddress\fR <FTN address of your node>
.br 
Each 'Address' line contains FTN address or AKA of your node in the 3D form. Any 4D address (point AKA) should not be specified here.
.br 
Example:
.br 
Address 2:5020/204
.br 
Address 7:1130/204
.br 
Examples for wrong syntax:
.br 
Address 2:5020/204.1
.br 
Address 7:1130/0@fidorus
.TP 
\fBHubroute\fR <nodelist file> <type of nodelist> <zone number> <net number>
.br 
where:
.br 
\fInodelist file\fR \- pathname of the world nodelist or nodelist segment file, may be use '?' and '*' shell wildcard characters;
.br 
\fItype of nodelist\fR \- 'z' for the zone/world nodelist, 'r' for the regional segment, 'n' for the network segment;
.br 
\fIzone number\fR \- zone number for the routing
.br 
\fInet number\fR \- net number for the routing
.LP 
Every \fBHubroute\fR line tells router to get hub\- and host\- routing information from nodelist or nodelist segment.
.br 
If nodelist file name is wildcarded and there are several matching files,
router will take the file with bigger suffix (i.e. bigger day number).
.br 
Examples:
.br 
Hubroute /fido/nodelist/nodelist.* z 2 5020
.br 
Hubroute /fido/nodelist/z2\-list.* z 2 5020
.br 
Hubroute /fido/nodelist/net5020.ndl n 2 5020

.TP 
\fBRouteFile\fR <.ROU file>
.br 
where:
.br 
\fI.ROU file\fR \- pathname of the .ROU file
.br 
The \fI.ROU file\fR has format:
next_hop	destination [destination ...]
next_hop	"World"
.br 
Where \fInext_hop\fR is node where netmail for \fIdestination\fR nodes, networks and zones should be routed to.
Wildcards like 2:5020/545.* or 2:5020/545.All are allowed in destinations.
Special token "World" means "all other destinations" and should be last in the list.
.br 
Example:
.br 
2:5020/888  999 555 5030/444 3:All/All
.br 
2:5020/50   World

.TP 
\fBTrustFile\fR <.TRU file>
.br 
.br 

.TP 
\fBDefaultRoute\fR <route_to> <destination>;
.br 
  This line gives you possibility to override some route branches
without creating additional rou\-file. Syntax is the same as in
routefile. 'DefaultRoute' is treated AFTER all other lines, so
it have the greatest priority.
.br 

.TP 
\fBWriteTo\fR <route file pathname>
.br 
Output file (routing file for the tracker).
.br 

.TP 
\fBRouteType\fR <type of route file>
.br 
Routing file syntax.
.br 
\fItype of route file\fR should be one of: 'husky' (for hpt), 'squish', 'tmail' (for the T\-mail version before v.2601), 'tmailn' (for the T\-mail version v.2601 and above), 'itrack', 'bpack', 'imbink', 'xmail', 'ifmail', 'unimail', 'bip', 'fidogate', 'qecho', 'ftrack'.
.br 

.TP 
\fBMinimize\fR <switch>
.br 
\fIswitch\fR may be 'on', 'yes' or 'off', 'no'.
.br 
Set it to 'on' or 'yes' for routing minimization.
.br 

.TP 
\fBRouteBegin\fR <signature1>
.br 
.TP 
\fBRouteEnd\fR   <signature2>
.br 
.br 
These \fIsignature\fRs are used to specify the start and the end of rewritable area in the route file.
It is recommended to enclose both \fIsignature\fRs into double\-quotes (").
.br 
Be careful!
.br 
Everything between these two \fIsignature\fRs will be deleted from route file.
.br 
Do not forget to add these strings to route file before running \fBfidoroute\fR.
.br 

.TP 
\fBLink\fR <FTN address> <flavors>
.br 
where:
.br 
\fIFTN address\fR is a FTN address of the your (direct) link;
.br 
\fIflavors\fR may be combination of the characters: 'C' (crash), 'D' (direct), 'N' (normal) or 'H' (hold) and 'F' (route files) and 'A' (no arcmail),
.br 
BHL:
.br 
\fIflavors\fR := ('C'|'D'|'N'|'H')['F']['A']
.br 
Examples:
.br 
Link 2:5020/0  CFA
.br 
Link 2:5020/24 DF

.TP 
\fBDefaultFlavor\fR <flavors>
.br 
This statement sets default flavor for links, which are not present
in 'Link' lines, but must be routed via us. If the DefaultRoute is
missing in config file, 'Hold' assumed. See \fIflavors\fR description
in the \fBLink\fR statement.
.br 
BHL:
.br 
\fIflavors\fR := ('C'|'D'|'N'|'H')['F']['A']

.TP 
\fBTempFile\fR </path/file.tmp>
.br 
This statement defines temporary file for build \fBWriteTo\fR file. \fBTempFile\fR and \fBWriteTo\fR file required be placed on same disk volume. Default value of \fBTempFile\fR is \fBWriteTo\fR with suffix replaced with '$$$', and if you don't specify \fBTempfile\fR, you should make directory of \fBWriteTo\fR file writable by user running fidoroute.
.SH "Limitation and hints"
.LP 
   Maximum number of 'routing items' (i.e. nodes, nets, zones) is 5000.
Can be increased, but I cannot imagine node to need this.
.br 
   Maximum number of recursively linked branches \- about 600 (it is not
max number of routing branches but number of sequentaly linked branches,
i.e. number of hops to destination node). Enough, IMHO. :)
.br 
   Maximum number of direct links \- 1000. You want wore \- no problem. ;)
.br 
   Maxinun number of aka \- 50.
.br 
   Maximum length of deadloop routing chain \- not limited.
.br 
   Maximum length of circle routing chain is unlimited. If
     router detect such chain, it try carefully mark unliked
     node as 'unrouted' and send him mail according default
     routing. You'll be warned, of course. :) Usually router
     do this by reasonable way, but check it.
.br 
   When re\-routing occured, router print messages. The last re\-routing
is used. Example:
.br 
2:5020/50 22
.br 
......
.br 
2:5020/52 22
.br 
   There will be re\-routing warning, mail for /22 will go to /52.
.br 
  Attention! In this case:
.br 
2:5020/24  469/All
.br 
2:5020/777 469/83
.br 
there is no routing conflict. 469/83's mail will go to /777, other NET469's mail
/24.
.SH "SEE ALSO"
.LP 
fidoroute(1), hpt(1), info fidoconfig
